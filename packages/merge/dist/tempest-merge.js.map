{"version":3,"file":null,"sources":["../lib/index.js"],"sourcesContent":["import { Stream, IndexSink } from '@tempest/core';\nexport function merge(streams) {\n    return new Stream(new Merge(streams.map(getSource)));\n}\nfunction getSource(stream) {\n    return stream.source;\n}\nexport class Merge {\n    constructor(sources) {\n        this.sources = sources;\n    }\n    run(sink, scheduler) {\n        const length = this.sources.length;\n        const disposables = new Array(length);\n        const sinks = new Array(length);\n        const mergeSink = new MergeSink(disposables, sinks, sink);\n        let indexSink;\n        for (let i = 0; i < length; ++i) {\n            indexSink = sinks[i] = new IndexSink(i, mergeSink);\n            disposables[i] = this.sources[i].run(indexSink, scheduler);\n        }\n        return {\n            dispose() {\n                disposables.forEach((disposable) => {\n                    disposable.dispose();\n                });\n            }\n        };\n    }\n}\nclass MergeSink {\n    constructor(disposables, sinks, sink) {\n        this.disposables = disposables;\n        this.sink = sink;\n        this.activeCount = sinks.length;\n    }\n    event(time, value) {\n        this.sink.event(time, value.value);\n    }\n    error(time, err) {\n        this.sink.error(time, err);\n    }\n    end(time, value) {\n        tryDispose(time, this.disposables[value.index], this.sink);\n        if (--this.activeCount === 0) {\n            this.sink.end(time, value.value);\n        }\n    }\n}\nfunction tryDispose(time, disposable, sink) {\n    try {\n        disposable.dispose();\n    }\n    catch (e) {\n        sink.error(time, e);\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["Stream","let","IndexSink","this"],"mappings":";;;;;;IACO,SAAS,KAAK,CAAC,OAAO,EAAE;QAC3B,OAAO,IAAIA,oBAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxD;AACD,IAAA,SAAS,SAAS,CAAC,MAAM,EAAE;QACvB,OAAO,MAAM,CAAC,MAAM,CAAC;KACxB;AACD,AAAO,IAAA,IAAM,KAAK,GAAC,cACJ,CAAC,OAAO,EAAE;QACrB,IAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,IAAA,CAAK,CAAA;AACL,IAAA,gBAAI,GAAG,iBAAC,IAAI,EAAE,SAAS,EAAE;;;QACrB,IAAU,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACvC,IAAU,WAAW,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAU,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,IAAU,SAAS,GAAG,IAAI,SAAS,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAQ,SAAS,CAAC;QAClB,KAASC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YACjC,SAAa,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIC,uBAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvD,WAAe,CAAC,CAAC,CAAC,GAAGC,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAC9D;QACL,OAAW;YACP,OAAW,kBAAA,GAAG;gBACV,WAAe,CAAC,OAAO,CAAC,UAAC,UAAU,EAAE;oBACjC,UAAc,CAAC,OAAO,EAAE,CAAC;iBACxB,CAAC,CAAC;aACN;SACJ,CAAC;AACV,IAAA,CAAK,CAAA;AAEL,IAAA,IAAM,SAAS,GAAC,kBACD,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE;QACtC,IAAQ,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,IAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,IAAQ,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;AACxC,IAAA,CAAK,CAAA;AACL,IAAA,oBAAI,KAAK,mBAAC,IAAI,EAAE,KAAK,EAAE;QACnB,IAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3C,IAAA,CAAK,CAAA;AACL,IAAA,oBAAI,KAAK,mBAAC,IAAI,EAAE,GAAG,EAAE;QACjB,IAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACnC,IAAA,CAAK,CAAA;AACL,IAAA,oBAAI,GAAG,iBAAC,IAAI,EAAE,KAAK,EAAE;QACjB,UAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAQ,EAAE,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YAC9B,IAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;SACpC;AACT,IAAA,CAAK,CAAA;AAEL,IAAA,SAAS,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;QACxC,IAAI;YACA,UAAU,CAAC,OAAO,EAAE,CAAC;SACxB;QACD,OAAO,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACvB;KACJ;;;;;;;"}